{"version":3,"sources":["webpack:///./src/views/cloudMusic/CMSingerDetail.vue?1543","webpack:///./src/request/server.js","webpack:///./src/request/cloudApi.js","webpack:///./src/views/cloudMusic/CMSingerDetail.vue?93e0","webpack:///src/views/cloudMusic/CMSingerDetail.vue","webpack:///./src/views/cloudMusic/CMSingerDetail.vue?67fa","webpack:///./src/views/cloudMusic/CMSingerDetail.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CMSingerDetail_vue_vue_type_style_index_0_id_b6359cee_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CMSingerDetail_vue_vue_type_style_index_0_id_b6359cee_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","service","axios","create","baseURL","timeout","headers","Content-Type","get","url","params","promise_default","a","resolve","reject","then","res","data","catch","err","interceptors","request","use","config","error","response","status","store","commit","Notification","title","message","type","concat","d","__webpack_exports__","cloudApi_CMSingerArtist","cloudApi_CMLogin","cloudApi_CMLoginState","cloudApi_CMPlaylist","CMSingerArtist","CMLogin","phone","password","CMLoginState","CMPlaylist","i","render","_vm","this","_h","$createElement","_c","_self","staticClass","on","click","back","_v","staticRenderFns","CMSingerDetailvue_type_script_lang_js_","name","list","mounted","$store","dispatch","methods","getData","_this","Object","cloudApi","artists","$router","cloudMusic_CMSingerDetailvue_type_script_lang_js_","component","componentNormalizer"],"mappings":"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","file":"js/chunk-9c5f0c82.aa98b75d.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CMSingerDetail.vue?vue&type=style&index=0&id=b6359cee&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CMSingerDetail.vue?vue&type=style&index=0&id=b6359cee&scoped=true&lang=css&\"","/**axios封装\r\n * 请求拦截、相应拦截、错误统一处理\r\n */\r\nimport axios from 'axios'; \r\nimport QS from 'qs';\r\nimport {Notification} from 'element-ui'\r\nimport store from '../store/index'\r\n\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n    baseURL: 'http://localhost:3000',\r\n    timeout: 10000, // 请求超时时间\r\n    headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\r\n    },\r\n    // withCredentials: false\r\n})\r\n\r\n// post请求头\r\n// axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\r\n// axios.defaults.withCredentials = false\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n    config => {\r\n        // 每次发送请求之前判断是否存在token，如果存在，则统一在http请求的header都加上token，不用每次请求都手动添加了\r\n        // 即使本地存在token，也有可能token是过期的，所以在响应拦截器中要对返回状态进行判断\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.error(error);\r\n    })\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n    response => {\r\n        if (response.status === 200) {\r\n            return Promise.resolve(response);\r\n        } else {\r\n            store.commit(`FULL_SCREEN_LOADING`,false)\r\n            Notification({\r\n                title: `警告`,\r\n                message: `接收数据失败`,\r\n                type: 'error'\r\n            });\r\n            return Promise.reject(response);\r\n        }\r\n    },\r\n    // 服务器状态码不是200的情况    \r\n    error => {\r\n        store.commit(`FULL_SCREEN_LOADING`,false)\r\n        if (error && error.response && error.response.status) {\r\n            switch (error.response.status) {\r\n                // 401: 未登录                \r\n                // 未登录则跳转登录页面，并携带当前页面的路径                \r\n                // 在登录成功后返回当前页面，这一步需要在登录页操作。                \r\n                case 401:\r\n                    // router.replace({\r\n                    //     path: '/login',\r\n                    //     query: { redirect: router.currentRoute.fullPath }\r\n                    // });\r\n                    Notification({\r\n                        title: `${error.response.status}警告`,\r\n                        message: error.response.status,\r\n                        type: 'error'\r\n                      });\r\n                    break;\r\n                // 403 token过期                \r\n                // 登录过期对用户进行提示                \r\n                // 清除本地token和清空vuex中token对象                \r\n                // 跳转登录页面                \r\n                case 403:\r\n                    Notification({\r\n                        title: `${error.response.status}警告`,\r\n                        message: `登录已经过期，请重新登录`,\r\n                        type: `error`\r\n                      });\r\n                // 404请求不存在                \r\n                case 404:\r\n                Notification({\r\n                    title: `${error.response.status}警告`,\r\n                    message: `网络请求不存在`,\r\n                    type: `error`\r\n                  });\r\n                    break;\r\n                // 其他错误，直接抛出错误提示                \r\n                default:\r\n                Notification({\r\n                    title: `${error.response.status}警告`,\r\n                    message: `数据请求失败`,\r\n                    type: 'error'\r\n                  });\r\n            }\r\n            return Promise.reject(error.response);\r\n        } else {\r\n            Notification({\r\n                title: `警告`,\r\n                message: `网络链接失败`,\r\n                type: 'error'\r\n            });\r\n            return Promise.reject(`err`);\r\n        }\r\n    }\r\n);\r\n/** \r\n * get方法，对应get请求 \r\n * @param {String} url [请求的url地址] \r\n * @param {Object} params [请求时携带的参数] \r\n */\r\nexport function get(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        service.get(url, {\r\n            params: params\r\n        })\r\n            .then(res => {\r\n                resolve(res.data);\r\n            })\r\n            .catch(err => {\r\n                reject(err.data)\r\n            })\r\n    });\r\n}\r\n/** \r\n * post方法，对应post请求 \r\n * @param {String} url [请求的url地址] \r\n * @param {Object} params [请求时携带的参数] \r\n */\r\nexport function post(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        service.post(url, QS.stringify(params))\r\n            .then(res => {\r\n                resolve(res.data);\r\n            })\r\n            .catch(err => {\r\n                reject(err.data)\r\n            })\r\n    });\r\n}\r\n","import { get, post } from './server'\r\n\r\n/**\r\n * 网易云音乐接口\r\n * cm 是cloudMusic简称\r\n */\r\n\r\n //  获取热门歌手\r\n export const CMSingerArtist = () => get(`/toplist/artist`)\r\n\r\n //  登录\r\n export const CMLogin = (phone,password) => get(`/login/cellphone?phone=${phone}&password=${password}`)\r\n\r\n //  登录状态\r\n export const CMLoginState = () => get(`/login/status`)\r\n\r\n //  获取用户信息 , 歌单，收藏，mv, dj 数量\r\n export const CMSubcount = () => get(`/user/subcount`)\r\n\r\n //  获取用户歌单\r\n export const CMPlaylist = (i) => get(`/user/playlist?uid=${i}`)\r\n\r\n  //  获取歌单详情\r\n  export const CMPlaylistDetail = (i) => get(`/playlist/detail?id=${i}`)","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"singer-detial\"},[_c('h1',{on:{\"click\":_vm.back}},[_vm._v(\"返回\")]),_c('h1',[_vm._v(\"歌手详情\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// 歌手详情\r\n<template>\r\n  <div class=\"singer-detial\">\r\n    <h1 @click=\"back\">返回</h1>\r\n    <h1>歌手详情</h1>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { CMSingerArtist } from '../../request/cloudApi'\r\nimport axios from 'axios'\r\nexport default {\r\n  name: \"CMSingerDetail\",\r\n  data() {\r\n    return {\r\n      list:[]\r\n    };\r\n  },\r\n  mounted() {\r\n      this.$store.dispatch('fullscreenLoading',false)\r\n  },\r\n  methods: {\r\n    getData() {\r\n      CMSingerArtist().then(res => {\r\n        this.list = res.list.artists\r\n        this.$store.dispatch('fullscreenLoading',false)\r\n      })\r\n    },\r\n    back(i) {\r\n        this.$router.back(-1)\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.singer-detial {\r\n  position: relative;padding:20px;\r\n  background: #222;color:#fff;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CMSingerDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CMSingerDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CMSingerDetail.vue?vue&type=template&id=b6359cee&scoped=true&\"\nimport script from \"./CMSingerDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./CMSingerDetail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CMSingerDetail.vue?vue&type=style&index=0&id=b6359cee&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b6359cee\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}